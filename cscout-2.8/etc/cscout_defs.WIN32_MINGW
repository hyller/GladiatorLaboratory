/*
 * (C) Copyright 2001-2006 Diomidis Spinellis.
 *
 * Standard definitions read when starting up
 * Windows/mingw gcc version
 *
 * To create this file look at /usr/lib/gcc-lib/ * / * /specs
 *
 * $Id: defs.h 1.9 2002/09/05 16:51:23 dds Exp $
 */

#define __DATE__  "Jan 01 1970"
#define __TIME__ "12:34:56"
#define __FILE__ "UNKNOWN.c"
#define __FUNCTION__ "UNKNOWN"
#define __LINE__ 1
#define __PRETTY_FUNCTION__ "UNKNOWN"
#define __func__ "UNKNOWN"
#define inline

//#define __cplusplus
#define __STDC__ 1
#define __ELF__
#define unix
#define i386
#define __i386
#define __i386__
#define __tune_i386__
#define linux
#define __linux
#define __linux__
#define __unix
#define __GNUC__ 2
#define __GNUC_MINOR__ 96
#define __WCHAR_TYPE__ short unsigned int
#define __signed signed

#ifdef __cplusplus
#define __GNUG__ 3
#define __EXCEPTIONS
#endif

/* Generic gcc workarounds.  These are maintained in cscout_defs.GENERIC_GCC. */
#define __builtin_constant_p(_x) ((_x), 0)
#define __builtin_expect(_x, _v) ((_v), (_x))
#define __builtin_fabs( _x) (double)(_x)
#define __builtin_fabsf(_x) (float)(_x)
#define __builtin_fabsl(_x) (long double)(_x)
#define __builtin_frame_address(_x) (_x, (void *)0)
#define __builtin_inf()     (double)0
#define __builtin_inff()    (float)0
#define __builtin_infl()    (long double)0
#define __builtin_memcpy(_d, _s, _n) (_s, _n, d)
#define __builtin_next_arg(_x) (_x, 0)
#define __builtin_offsetof(_t, _m) (((size_t) &((_t *)0)->_m))
#define __builtin_stdarg_start
#define __builtin_va_arg(_ap, _type) (*(_type *)(_ap))
#define __builtin_va_copy(_a, _b)
#define __builtin_va_end(_v)
#define __builtin_va_list void *
#define __builtin_va_start(_ap, _arg) ((void)(_ap),(void)(_arg))
#define __extension
#define __extension__
#define asm __asm__
#define typeof __typeof__

/* To make it appear as a read-only identifier */
int main();
/* To avoid unused include file warnings */
static void _cscout_dummy1(void) { _cscout_dummy1(); }
