// Configure these

// Note: defines must be an arithmetic operation (e.g. "1 * 256") due to MPLINK.

// Set the desired stack size. Note: always using big stack (no 256 bytes limit).
#DEFINE STACK_SIZE              745 + 0

// Set size of the big memory region.
#DEFINE BIG_SIZE                0x000004b5 + 0

// Define this flag (actual value is unimportant) to enable stack overflow check in the linker script.
// (remember to enable stack overflow checking in the application as well.)
//#DEFINE ENABLE_STACK_CHECK			0 + 0

// The remaining memory must manually be divided into data banks that do not cross a 256 byte boundary.
// First address is: 0x00060 + STACK_SIZE + [STACK_CHECK_SIZE +] BIG_SIZE.
// Last address is: 0x00e7f.
//DATABANK   NAME=gpr0       START=0x60              END=0xFF
//DATABANK   NAME=gpr1       START=0x100             END=0x1FF
//DATABANK   NAME=gpr2       START=0x200             END=0x2FF
//DATABANK   NAME=gpr3       START=0x300             END=0x3FF
//DATABANK   NAME=gpr4       START=0x400             END=0x4FF
//DATABANK   NAME=gpr5       START=0x500             END=0x5FF
//DATABANK   NAME=gpr6       START=0x600             END=0x6FF
//DATABANK   NAME=gpr7       START=0x700             END=0x7FF
DATABANK   NAME=gpr8       START=0x802             END=0x8FF
DATABANK   NAME=gpr9       START=0x900             END=0x9FF
DATABANK   NAME=gpr10      START=0xA00             END=0xAFF
DATABANK   NAME=gpr11      START=0xB00             END=0xBFF
DATABANK   NAME=gpr12      START=0xC00             END=0xCFF
DATABANK   NAME=gpr13      START=0xD00             END=0xDFF
DATABANK   NAME=gpr14      START=0xE00             END=0xE7F
DATABANK   NAME=gpr15      START=0xF00             END=0xF5F

// Don't touch anything from here on

#IFDEF ENABLE_STACK_CHECK
#DEFINE STACK_CHECK_SIZE				4 + 0
#ELSE
#DEFINE STACK_CHECK_SIZE				0 + 0
#FI

#DEFINE STACK_START             0x00060 + 0
#DEFINE STACK_CHECK_START       STACK_START + STACK_SIZE
#DEFINE BIG_START               STACK_CHECK_START + STACK_CHECK_SIZE
#DEFINE FREE_START              BIG_START + BIG_SIZE
#DEFINE STACK_END								STACK_CHECK_START - 1
#DEFINE STACK_CHECK_END					BIG_START - 1
#DEFINE BIG_END									FREE_START - 1

LIBPATH .

#IFDEF _CRUNTIME

FILES c018i.o
FILES clib.lib
FILES p18F67J60.lib

#FI

CODEPAGE    NAME=page               START=0x0               END=0x1FFF7
CODEPAGE    NAME=config             START=0x1FFF8           END=0x1FFFD						PROTECTED
CODEPAGE    NAME=devid              START=0x3FFFFE          END=0x3FFFFF					PROTECTED

ACCESSBANK  NAME=accessram          START=0x00000           END=0x0005f
DATABANK    NAME=stack_region       START=STACK_START       END=STACK_END					PROTECTED
#IFDEF ENABLE_STACK_CHECK
DATABANK    NAME=stack_check_region START=STACK_CHECK_START END=STACK_CHECK_END 	PROTECTED
#FI
DATABANK    NAME=big_region         START=BIG_START         END=BIG_END						PROTECTED
DATABANK    NAME=sfr14              START=0xE80             END=0xEFF							PROTECTED
ACCESSBANK  NAME=accesssfr          START=0xF60             END=0xFFF							PROTECTED

#IFDEF _CRUNTIME

STACK       SIZE=STACK_SIZE         RAM=stack_region
#IFDEF ENABLE_STACK_CHECK
SECTION     NAME=stack_check        RAM=stack_check_region
#FI
SECTION     NAME=big_mem            RAM=big_region

SECTION     NAME=CONFIG             ROM=config

#FI
