//////////////////////////////////////////////////////////////////////////////
// Product: PC-Lint 9.x option file for QP/C++ applications, GNU-ARM compiler
// Last Updated for Version: 5.1.1
// Date of the Last Update:  Oct 04, 2013
//
//                    Q u a n t u m     L e a P s
//                    ---------------------------
//                    innovating embedded systems
//
// Copyright (C) 2002-2013 Quantum Leaps, LLC. All rights reserved.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Alternatively, this program may be distributed and modified under the
// terms of Quantum Leaps commercial licenses, which expressly supersede
// the GNU General Public License and are specifically designed for
// licensees interested in retaining the proprietary status of their code.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.
//
// Contact information:
// Quantum Leaps Web sites: http://www.quantum-leaps.com
//                          http://www.state-machine.com
// e-mail:                  info@quantum-leaps.com
//////////////////////////////////////////////////////////////////////////////

// the location of the GNU ARM includes (need to adjust!!!)
-iC:\tools\CodeSourcery\arm-none-eabi\include

// the location of the QTools lint directory (need to adjust!!!)
-i%QTOOLS%\lint

-i%QPCPP%\include               // QP/C++ includes
-i%QPCPP%\ports\arm-cm\qk\gnu   // QP/C++ port includes
-i%QPCPP%\ports\arm-cm\cmsis    // CMSIS directory

co-gnu-arm.lnt                // GNU ARM compiler
au-misra-cpp.lnt              // MISRA-C++:2008 rules
au-ds.lnt                     // Dan Saks recommendations
lib-qpcpp.lnt                 // QP/C++ options
//-strong(AXJ)                  // Strong type checking

// library headers
-wlib(1)                      // ignore warnings from library headers
+libclass(angle)              // consider only <...> headers as library
+libdir(%QPCPP%\ports\arm-cm\cmsis)

//-vf                           // print names of all header & source files

-esym(1960, philoNum)         // Non-private data member in a non-POD struct
-efunc(946, *PHILO_ID)        // 5-0-15,5-0-17,5-0-18 subtraction of pointers
-efunc(947, *PHILO_ID)        // 5-0-15,5-0-17,5-0-18 subtraction of pointers
-efunc(1960,*PHILO_ID)        // 5-0-6, conversion of integer to smaller type
-efile(1924, *bsp.cpp)        // 5-2-4, C-style cast
-esym(1960,                   // 16-0-4, Function-like macro 
 QF_SET_BASEPRI)
-esym(1923,                   // 16-2-2, could become const variable 
 QF_BASEPRI)
-emacro(717,                  // do ... while(0);
 QK_ISR_ENTRY,
 QK_ISR_EXIT)

// CMSIS-induced problems
-e923                         // 5-2-7, 5-2-8 cast from int to pointer
-e1924                        // C-style cast (for CMSIS)

// not referenced symbols
-e714                         // symbol '...' not referenced
-e755                         // global macro '...' not referenced
-e756                         // global typedef '...' not referenced
-e757                         // global declarator '...' not referenced
-e768                         // struct member '...' not referenced
-e551                         // symbol '...' not accessed
