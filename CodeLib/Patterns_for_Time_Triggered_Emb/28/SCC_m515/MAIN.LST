C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 1   


C51 COMPILER V6.10, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\MAIN.OBJ
COMPILER INVOKED BY: C:\KEIL\C51\BIN\C51.EXE .\MAIN.C OPTIMIZE(6,SIZE) BROWSE DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBOL
                    -S

stmt level    source

   1          /*------------------------------------------------------------------*-
   2          
   3             Main.c (v1.00)
   4          
   5            ------------------------------------------------------------------
   6           
   7             DEMO PROGRAM FOR CAN SHARED-CLOCK SCHEDULER - Master
   8          
   9             Required linker options (see Chapter 14 for details):
  10          
  11             OVERLAY (main ~ (LED_Flash_Update,TRAFFIC_LIGHTS_Update), 
  12             SCH_Dispatch_Tasks ! (LED_Flash_Update,TRAFFIC_LIGHTS_Update))
  13          
  14          
  15             COPYRIGHT
  16             ---------
  17          
  18             This code is from the book:
  19          
  20             PATTERNS FOR TIME-TRIGGERED EMBEDDED SYSTEMS by Michael J. Pont 
  21             [Pearson Education, 2001; ISBN: 0-201-33138-1].
  22          
  23             This code is copyright (c) 2001 by Michael J. Pont.
  24           
  25             See book for copyright details and other information.
  26          
  27          -*------------------------------------------------------------------*/
  28          
  29          #include "Main.h"
   1      =1  /*------------------------------------------------------------------*-
   2      =1  
   3      =1     Main.H (v1.00)
   4      =1  
   5      =1    ------------------------------------------------------------------
   6      =1     
   7      =1     'Project Header' (see Chap 9) for project SCU_Cb (see Chap 27)
   8      =1  
   9      =1  
  10      =1     COPYRIGHT
  11      =1     ---------
  12      =1  
  13      =1     This code is from the book:
  14      =1  
  15      =1     PATTERNS FOR TIME-TRIGGERED EMBEDDED SYSTEMS by Michael J. Pont 
  16      =1     [Pearson Education, 2001; ISBN: 0-201-33138-1].
  17      =1  
  18      =1     This code is copyright (c) 2001 by Michael J. Pont.
  19      =1   
  20      =1     See book for copyright details and other information.
  21      =1  
  22      =1  -*------------------------------------------------------------------*/
  23      =1  
  24      =1  #ifndef _MAIN_H
  25      =1  #define _MAIN_H
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 2   

  26      =1  
  27      =1  //------------------------------------------------------------------
  28      =1  // WILL NEED TO EDIT THIS SECTION FOR EVERY PROJECT
  29      =1  //------------------------------------------------------------------
  30      =1  
  31      =1  // Must include the appropriate microcontroller header file here
  32      =1  #include <reg515c.h>
   1      =2  /*------------------------------------------------------------------
   2      =2  REG515C.H
   3      =2  
   4      =2  Header file for the Infineon C515C 
   5      =2  Copyright (c) 1995-1999 Keil Elektronik GmbH  All rights reserved.
   6      =2  ------------------------------------------------------------------*/
   7      =2  
   8      =2  /*  BYTE Registers    */
   9      =2  /*  CPU    */
  10      =2  sfr   ACC    = 0xE0;
  11      =2  sfr   B      = 0xF0;
  12      =2  sfr   DPL    = 0x82;
  13      =2  sfr   DPH    = 0x83;
  14      =2  sfr   DPSEL  = 0x92;
  15      =2  sfr   PSW    = 0xD0;
  16      =2  sfr   SP     = 0x81;
  17      =2  sfr   SYSCON = 0xB1;
  18      =2  
  19      =2  /*  A/D Converter     */
  20      =2  sfr   ADCON0 = 0xD8;
  21      =2  sfr   ADDATH = 0xD9;
  22      =2  sfr   ADDATL = 0xDA;  /* in mapped SFR area */
  23      =2  sfr   ADCON1 = 0xDC;
  24      =2  
  25      =2  /*  Interrupt System  */
  26      =2  sfr   IEN0   = 0xA8;
  27      =2  sfr   IEN1   = 0xB8;
  28      =2  sfr   IEN2   = 0x9A;
  29      =2  sfr   IP0    = 0xA9;
  30      =2  sfr   IP1    = 0xB9;
  31      =2  sfr   IRCON  = 0xC0;
  32      =2  
  33      =2  /*  XRAM   */
  34      =2  sfr   XPAGE  = 0x91;
  35      =2  
  36      =2  /*  Ports  */
  37      =2  sfr   P0     = 0x80;
  38      =2  sfr   P1     = 0x90;
  39      =2  sfr   P2     = 0xA0;
  40      =2  sfr   P3     = 0xB0;
  41      =2  sfr   P4     = 0xE8;
  42      =2  sfr   P5     = 0xF8;
  43      =2  sfr   DIR5   = 0xF8;  /* in mapped SFR area */
  44      =2  sfr   P6     = 0xDB;
  45      =2  sfr   P7     = 0xFA;
  46      =2  
  47      =2  /*  Serial Channel    */
  48      =2  sfr   SCON   = 0x98;
  49      =2  sfr   SBUF   = 0x99;
  50      =2  sfr   SRELL  = 0xAA;
  51      =2  sfr   SRELH  = 0xBA;
  52      =2  
  53      =2  /*  SSC Interface     */
  54      =2  sfr   SSCCON = 0x93;
  55      =2  sfr   STB    = 0x94;
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 3   

  56      =2  sfr   SRB    = 0x95;
  57      =2  sfr   SCF    = 0xAB;
  58      =2  sfr   SCIEN  = 0xAC;
  59      =2  sfr   SSCMOD = 0x96;
  60      =2  
  61      =2  /*  Timer0 / Timer1   */
  62      =2  sfr   TCON   = 0x88;
  63      =2  sfr   TMOD   = 0x89;
  64      =2  sfr   TL0    = 0x8A;
  65      =2  sfr   TL1    = 0x8B;
  66      =2  sfr   TH0    = 0x8C;
  67      =2  sfr   TH1    = 0x8D;
  68      =2  
  69      =2  /*  CAP/COM Unit / Timer2 */
  70      =2  sfr   CCEN   = 0xC1;
  71      =2  sfr   CCL1   = 0xC2;
  72      =2  sfr   CCH1   = 0xC3;
  73      =2  sfr   CCL2   = 0xC4;
  74      =2  sfr   CCH2   = 0xC5;
  75      =2  sfr   CCL3   = 0xC6;
  76      =2  sfr   CCH3   = 0xC7;
  77      =2  sfr   T2CON  = 0xC8;
  78      =2  sfr   CRCL   = 0xCA;
  79      =2  sfr   CRCH   = 0xCB;
  80      =2  sfr   TL2    = 0xCC;
  81      =2  sfr   TH2    = 0xCD;
  82      =2  
  83      =2  /*  Watchdog */
  84      =2  sfr   WDTREL = 0x86;
  85      =2  
  86      =2  /*  Power Save Moders */
  87      =2  sfr   PCON   = 0x87;
  88      =2  sfr   PCON1  = 0x88;  /* in mapped SFR area */
  89      =2  
  90      =2  
  91      =2  /*  BIT Register  */
  92      =2  /*  PSW  */
  93      =2  sbit  CY     = PSW^7;
  94      =2  sbit  AC     = PSW^6;
  95      =2  sbit  F0     = PSW^5;
  96      =2  sbit  RS1    = PSW^4;
  97      =2  sbit  RS0    = PSW^3;
  98      =2  sbit  OV     = PSW^2;
  99      =2  sbit  F1     = PSW^1;
 100      =2  sbit  P      = PSW^0;
 101      =2  
 102      =2  /*  TCON  */
 103      =2  sbit  TF1    = TCON^7;
 104      =2  sbit  TR1    = TCON^6;
 105      =2  sbit  TF0    = TCON^5;
 106      =2  sbit  TR0    = TCON^4;
 107      =2  sbit  IE1    = TCON^3;
 108      =2  sbit  IT1    = TCON^2;
 109      =2  sbit  IE0    = TCON^1;
 110      =2  sbit  IT0    = TCON^0;
 111      =2  
 112      =2  /*  IEN0  */
 113      =2  sbit  EAL    = IEN0^7;
 114      =2  sbit  WDT    = IEN0^6;
 115      =2  sbit  ET2    = IEN0^5;
 116      =2  sbit  ES     = IEN0^4;
 117      =2  sbit  ET1    = IEN0^3;
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 4   

 118      =2  sbit  EX1    = IEN0^2;
 119      =2  sbit  ET0    = IEN0^1;
 120      =2  sbit  EX0    = IEN0^0;
 121      =2  
 122      =2  /*  IEN1  */
 123      =2  sbit  EXEN2  = IEN1^7;
 124      =2  sbit  SWDT   = IEN1^6;
 125      =2  sbit  EX6    = IEN1^5;
 126      =2  sbit  EX5    = IEN1^4;
 127      =2  sbit  EX4    = IEN1^3;
 128      =2  sbit  EX3    = IEN1^2;
 129      =2  sbit  EX2    = IEN1^1;
 130      =2  sbit  EADC   = IEN1^0;
 131      =2  
 132      =2  /*  P3  */
 133      =2  sbit  RD     = P3^7;
 134      =2  sbit  WR     = P3^6;
 135      =2  sbit  T1     = P3^5;
 136      =2  sbit  T0     = P3^4;
 137      =2  sbit  INT1   = P3^3;
 138      =2  sbit  INT0   = P3^2;
 139      =2  sbit  TXD    = P3^1;
 140      =2  sbit  RXD    = P3^0;
 141      =2  
 142      =2  /*  SCON  */
 143      =2  sbit  SM0    = SCON^7;
 144      =2  sbit  SM1    = SCON^6;
 145      =2  sbit  SM2    = SCON^5;
 146      =2  sbit  REN    = SCON^4;
 147      =2  sbit  TB8    = SCON^3;
 148      =2  sbit  RB8    = SCON^2;
 149      =2  sbit  TI     = SCON^1;
 150      =2  sbit  RI     = SCON^0;
 151      =2  
 152      =2  /*  T2CON  */
 153      =2  sbit  T2PS   = T2CON^7;
 154      =2  sbit  I3FR   = T2CON^6;
 155      =2  sbit  I2FR   = T2CON^5;
 156      =2  sbit  T2R1   = T2CON^4;
 157      =2  sbit  T2R0   = T2CON^3;
 158      =2  sbit  T2CM   = T2CON^2;
 159      =2  sbit  T2I1   = T2CON^1;
 160      =2  sbit  T2I0   = T2CON^0;
 161      =2  
 162      =2  /*  ADCON0  */
 163      =2  sbit  BD     = ADCON0^7;
 164      =2  sbit  CLK    = ADCON0^6;
 165      =2  sbit  ADEX   = ADCON0^5;
 166      =2  sbit  BSY    = ADCON0^4;
 167      =2  sbit  ADM    = ADCON0^3;
 168      =2  sbit  MX2    = ADCON0^2;
 169      =2  sbit  MX1    = ADCON0^1;
 170      =2  sbit  MX0    = ADCON0^0;
 171      =2  
 172      =2  /*  IRCON  */
 173      =2  sbit  EXF2   = IRCON^7;
 174      =2  sbit  TF2    = IRCON^6;
 175      =2  sbit  IEX6   = IRCON^5;
 176      =2  sbit  IEX5   = IRCON^4;
 177      =2  sbit  IEX4   = IRCON^3;
 178      =2  sbit  IEX3   = IRCON^2;
 179      =2  sbit  IEX2   = IRCON^1;
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 5   

 180      =2  sbit  IADC   = IRCON^0;
 181      =2  
 182      =2  /*  P1    */
 183      =2  sbit  T2     = P1^7;
 184      =2  sbit  CLKOUT = P1^6;
 185      =2  sbit  T2EX   = P1^5;
 186      =2  sbit  INT2   = P1^4;
 187      =2  sbit  INT6   = P1^3;
 188      =2  sbit  INT5   = P1^2;
 189      =2  sbit  INT4   = P1^1;
 190      =2  sbit  INT3   = P1^0;
 191      =2  
 192      =2  /*  P4    */
 193      =2  sbit  RXDC   = P4^7;
 194      =2  sbit  TXDC   = P4^6;
 195      =2  sbit  INT8   = P4^5;
 196      =2  sbit  SLS    = P4^4;
 197      =2  sbit  STO    = P4^3;
 198      =2  sbit  SRI    = P4^2;
 199      =2  sbit  SCLK   = P4^1;
 200      =2  sbit  ADST   = P4^0;
  33      =1  
  34      =1  // Include oscillator / chip details here 
  35      =1  // (essential if generic delays / timeouts are used)
  36      =1  //  -
  37      =1  // Oscillator / resonator frequency (in Hz) e.g. (11059200UL)
  38      =1  #define OSC_FREQ (10000000UL)
  39      =1  
  40      =1  // Number of oscillations per instruction (4, 6 or 12)
  41      =1  // 12 - Original 8051 / 8052 and numerous modern versions
  42      =1  //  6 - Various Infineon and Philips devices, etc.
  43      =1  //  4 - Dallas, etc.
  44      =1  //
  45      =1  // Take care with Dallas devices 
  46      =1  // - Timers default to *12* osc ticks unless CKCON is modified 
  47      =1  // - If using generic code on a Dallas device, use 12 here
  48      =1  #define OSC_PER_INST (6)
  49      =1  
  50      =1  //------------------------------------------------------------------
  51      =1  // SHOULD NOT NEED TO EDIT THE SECTIONS BELOW
  52      =1  //------------------------------------------------------------------
  53      =1  typedef unsigned char tByte;
  54      =1  typedef unsigned int  tWord;
  55      =1  typedef unsigned long tLong;
  56      =1  
  57      =1  // Misc #defines
  58      =1  #ifndef TRUE
  59      =1  #define FALSE 0
  60      =1  #define TRUE (!FALSE)
  61      =1  #endif
  62      =1  
  63      =1  #define RETURN_NORMAL (bit) 0
  64      =1  #define RETURN_ERROR (bit) 1
  65      =1  
  66      =1  
  67      =1  //------------------------------------------------------------------
  68      =1  // Interrupts
  69      =1  // - see Chapter 13.  
  70      =1  //------------------------------------------------------------------
  71      =1  
  72      =1  // Generic 8051/52 timer interrupts (used in most schedulers)
  73      =1  #define INTERRUPT_Timer_0_Overflow 1
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 6   

  74      =1  #define INTERRUPT_Timer_1_Overflow 3
  75      =1  #define INTERRUPT_Timer_2_Overflow 5
  76      =1  
  77      =1  // Additional interrupts (used in shared-clock schedulers)
  78      =1  #define INTERRUPT_EXTERNAL_0 0
  79      =1  #define INTERRUPT_EXTERNAL_1 2
  80      =1  #define INTERRUPT_UART_Rx_Tx 4
  81      =1  #define INTERRUPT_CAN_c515c 17
  82      =1  
  83      =1  //------------------------------------------------------------------
  84      =1  // Error codes 
  85      =1  // - see Chapter 14. 
  86      =1  //------------------------------------------------------------------
  87      =1  
  88      =1  #define ERROR_SCH_TOO_MANY_TASKS (1)
  89      =1  #define ERROR_SCH_CANNOT_DELETE_TASK (2)
  90      =1  
  91      =1  #define ERROR_SCH_WAITING_FOR_SLAVE_TO_ACK (3)
  92      =1  #define ERROR_SCH_WAITING_FOR_START_COMMAND_FROM_MASTER (3)
  93      =1  
  94      =1  #define ERROR_SCH_ONE_OR_MORE_SLAVES_DID_NOT_START (4)
  95      =1  #define ERROR_SCH_LOST_SLAVE (5)
  96      =1  
  97      =1  #define ERROR_SCH_CAN_BUS_ERROR (6)
  98      =1  
  99      =1  #define ERROR_I2C_WRITE_BYTE (10)
 100      =1  #define ERROR_I2C_READ_BYTE (11)
 101      =1  #define ERROR_I2C_WRITE_BYTE_AT24C64 (12)
 102      =1  #define ERROR_I2C_READ_BYTE_AT24C64 (13)
 103      =1  #define ERROR_I2C_DS1621 (14)
 104      =1  
 105      =1  #define ERROR_USART_TI (21)
 106      =1  #define ERROR_USART_WRITE_CHAR (22)
 107      =1  
 108      =1  #define ERROR_SPI_EXCHANGE_BYTES_TIMEOUT (31)
 109      =1  #define ERROR_SPI_X25_TIMEOUT (32)
 110      =1  #define ERROR_SPI_MAX1110_TIMEOUT (33)
 111      =1  
 112      =1  #define ERROR_ADC_MAX150_TIMEOUT (44)
 113      =1  
 114      =1  #endif
 115      =1  
 116      =1  /*------------------------------------------------------------------*-
 117      =1    ---- END OF FILE -------------------------------------------------
 118      =1  -*------------------------------------------------------------------*/
  30          
  31          #include "LED_Flas.h"
   1      =1  /*------------------------------------------------------------------*-
   2      =1  
   3      =1     LED_flas.H (v1.00)
   4      =1  
   5      =1    ------------------------------------------------------------------
   6      =1     
   7      =1     - See LED_flas.C for details.
   8      =1  
   9      =1  
  10      =1     COPYRIGHT
  11      =1     ---------
  12      =1  
  13      =1     This code is from the book:
  14      =1  
  15      =1     PATTERNS FOR TIME-TRIGGERED EMBEDDED SYSTEMS by Michael J. Pont 
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 7   

  16      =1     [Pearson Education, 2001; ISBN: 0-201-33138-1].
  17      =1  
  18      =1     This code is copyright (c) 2001 by Michael J. Pont.
  19      =1   
  20      =1     See book for copyright details and other information.
  21      =1  
  22      =1  -*------------------------------------------------------------------*/
  23      =1  
  24      =1  // ------ Public function prototypes -------------------------------
  25      =1  
  26      =1  void LED_Flash_Init(void);
  27      =1  void LED_Flash_Update(void);
  28      =1  
  29      =1  /*------------------------------------------------------------------*-
  30      =1    ---- END OF FILE -------------------------------------------------
  31      =1  -*------------------------------------------------------------------*/
  32          #include "SCC_M515.H"
   1      =1  /*------------------------------------------------------------------*-
   2      =1    
   3      =1    SCC_M515.H (v1.00)
   4      =1  
   5      =1    ------------------------------------------------------------------
   6      =1  
   7      =1    - see SCC_M515.C for details
   8      =1  
   9      =1  
  10      =1     COPYRIGHT
  11      =1     ---------
  12      =1  
  13      =1     This code is from the book:
  14      =1  
  15      =1     PATTERNS FOR TIME-TRIGGERED EMBEDDED SYSTEMS by Michael J. Pont 
  16      =1     [Pearson Education, 2001; ISBN: 0-201-33138-1].
  17      =1  
  18      =1     This code is copyright (c) 2001 by Michael J. Pont.
  19      =1   
  20      =1     See book for copyright details and other information.
  21      =1  
  22      =1  -*------------------------------------------------------------------*/
  23      =1  
  24      =1  #include "Main.h"
   1      =2  /*------------------------------------------------------------------*-
   2      =2  
   3      =2     Main.H (v1.00)
   4      =2  
   5      =2    ------------------------------------------------------------------
   6      =2     
   7      =2     'Project Header' (see Chap 9) for project SCU_Cb (see Chap 27)
   8      =2  
   9      =2  
  10      =2     COPYRIGHT
  11      =2     ---------
  12      =2  
  13      =2     This code is from the book:
  14      =2  
  15      =2     PATTERNS FOR TIME-TRIGGERED EMBEDDED SYSTEMS by Michael J. Pont 
  16      =2     [Pearson Education, 2001; ISBN: 0-201-33138-1].
  17      =2  
  18      =2     This code is copyright (c) 2001 by Michael J. Pont.
  19      =2   
  20      =2     See book for copyright details and other information.
  21      =2  
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 8   

  22      =2  -*------------------------------------------------------------------*/
  23      =2  
  24      =2  #ifndef _MAIN_H
           =2 #define _MAIN_H
           =2 
           =2 //------------------------------------------------------------------
           =2 // WILL NEED TO EDIT THIS SECTION FOR EVERY PROJECT
           =2 //------------------------------------------------------------------
           =2 
           =2 // Must include the appropriate microcontroller header file here
           =2 #include <reg515c.h>
           =2 
           =2 // Include oscillator / chip details here 
           =2 // (essential if generic delays / timeouts are used)
           =2 //  -
           =2 // Oscillator / resonator frequency (in Hz) e.g. (11059200UL)
           =2 #define OSC_FREQ (10000000UL)
           =2 
           =2 // Number of oscillations per instruction (4, 6 or 12)
           =2 // 12 - Original 8051 / 8052 and numerous modern versions
           =2 //  6 - Various Infineon and Philips devices, etc.
           =2 //  4 - Dallas, etc.
           =2 //
           =2 // Take care with Dallas devices 
           =2 // - Timers default to *12* osc ticks unless CKCON is modified 
           =2 // - If using generic code on a Dallas device, use 12 here
           =2 #define OSC_PER_INST (6)
           =2 
           =2 //------------------------------------------------------------------
           =2 // SHOULD NOT NEED TO EDIT THE SECTIONS BELOW
           =2 //------------------------------------------------------------------
           =2 typedef unsigned char tByte;
           =2 typedef unsigned int  tWord;
           =2 typedef unsigned long tLong;
           =2 
           =2 // Misc #defines
           =2 #ifndef TRUE
           =2 #define FALSE 0
           =2 #define TRUE (!FALSE)
           =2 #endif
           =2 
           =2 #define RETURN_NORMAL (bit) 0
           =2 #define RETURN_ERROR (bit) 1
           =2 
           =2 
           =2 //------------------------------------------------------------------
           =2 // Interrupts
           =2 // - see Chapter 13.  
           =2 //------------------------------------------------------------------
           =2 
           =2 // Generic 8051/52 timer interrupts (used in most schedulers)
           =2 #define INTERRUPT_Timer_0_Overflow 1
           =2 #define INTERRUPT_Timer_1_Overflow 3
           =2 #define INTERRUPT_Timer_2_Overflow 5
           =2 
           =2 // Additional interrupts (used in shared-clock schedulers)
           =2 #define INTERRUPT_EXTERNAL_0 0
           =2 #define INTERRUPT_EXTERNAL_1 2
           =2 #define INTERRUPT_UART_Rx_Tx 4
           =2 #define INTERRUPT_CAN_c515c 17
           =2 
           =2 //------------------------------------------------------------------
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 9   

           =2 // Error codes 
           =2 // - see Chapter 14. 
           =2 //------------------------------------------------------------------
           =2 
           =2 #define ERROR_SCH_TOO_MANY_TASKS (1)
           =2 #define ERROR_SCH_CANNOT_DELETE_TASK (2)
           =2 
           =2 #define ERROR_SCH_WAITING_FOR_SLAVE_TO_ACK (3)
           =2 #define ERROR_SCH_WAITING_FOR_START_COMMAND_FROM_MASTER (3)
           =2 
           =2 #define ERROR_SCH_ONE_OR_MORE_SLAVES_DID_NOT_START (4)
           =2 #define ERROR_SCH_LOST_SLAVE (5)
           =2 
           =2 #define ERROR_SCH_CAN_BUS_ERROR (6)
           =2 
           =2 #define ERROR_I2C_WRITE_BYTE (10)
           =2 #define ERROR_I2C_READ_BYTE (11)
           =2 #define ERROR_I2C_WRITE_BYTE_AT24C64 (12)
           =2 #define ERROR_I2C_READ_BYTE_AT24C64 (13)
           =2 #define ERROR_I2C_DS1621 (14)
           =2 
           =2 #define ERROR_USART_TI (21)
           =2 #define ERROR_USART_WRITE_CHAR (22)
           =2 
           =2 #define ERROR_SPI_EXCHANGE_BYTES_TIMEOUT (31)
           =2 #define ERROR_SPI_X25_TIMEOUT (32)
           =2 #define ERROR_SPI_MAX1110_TIMEOUT (33)
           =2 
           =2 #define ERROR_ADC_MAX150_TIMEOUT (44)
           =2 
           =2 #endif
 115      =2  
 116      =2  /*------------------------------------------------------------------*-
 117      =2    ---- END OF FILE -------------------------------------------------
 118      =2  -*------------------------------------------------------------------*/
  25      =1  #include "Sch51.h"
   1      =2  /*------------------------------------------------------------------*-
   2      =2    
   3      =2     SCH51.H (v1.00)
   4      =2  
   5      =2    ------------------------------------------------------------------
   6      =2  
   7      =2     - see SCH51.C for details
   8      =2  
   9      =2  
  10      =2     COPYRIGHT
  11      =2     ---------
  12      =2  
  13      =2     This code is from the book:
  14      =2  
  15      =2     PATTERNS FOR TIME-TRIGGERED EMBEDDED SYSTEMS by Michael J. Pont 
  16      =2     [Pearson Education, 2001; ISBN: 0-201-33138-1].
  17      =2  
  18      =2     This code is copyright (c) 2001 by Michael J. Pont.
  19      =2   
  20      =2     See book for copyright details and other information.
  21      =2  
  22      =2  -*------------------------------------------------------------------*/
  23      =2  
  24      =2  #ifndef _SCH51_H
  25      =2  #define _SCH51_H
  26      =2  
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 10  

  27      =2  #include "Main.h"
   1      =3  /*------------------------------------------------------------------*-
   2      =3  
   3      =3     Main.H (v1.00)
   4      =3  
   5      =3    ------------------------------------------------------------------
   6      =3     
   7      =3     'Project Header' (see Chap 9) for project SCU_Cb (see Chap 27)
   8      =3  
   9      =3  
  10      =3     COPYRIGHT
  11      =3     ---------
  12      =3  
  13      =3     This code is from the book:
  14      =3  
  15      =3     PATTERNS FOR TIME-TRIGGERED EMBEDDED SYSTEMS by Michael J. Pont 
  16      =3     [Pearson Education, 2001; ISBN: 0-201-33138-1].
  17      =3  
  18      =3     This code is copyright (c) 2001 by Michael J. Pont.
  19      =3   
  20      =3     See book for copyright details and other information.
  21      =3  
  22      =3  -*------------------------------------------------------------------*/
  23      =3  
  24      =3  #ifndef _MAIN_H
           =3 #define _MAIN_H
           =3 
           =3 //------------------------------------------------------------------
           =3 // WILL NEED TO EDIT THIS SECTION FOR EVERY PROJECT
           =3 //------------------------------------------------------------------
           =3 
           =3 // Must include the appropriate microcontroller header file here
           =3 #include <reg515c.h>
           =3 
           =3 // Include oscillator / chip details here 
           =3 // (essential if generic delays / timeouts are used)
           =3 //  -
           =3 // Oscillator / resonator frequency (in Hz) e.g. (11059200UL)
           =3 #define OSC_FREQ (10000000UL)
           =3 
           =3 // Number of oscillations per instruction (4, 6 or 12)
           =3 // 12 - Original 8051 / 8052 and numerous modern versions
           =3 //  6 - Various Infineon and Philips devices, etc.
           =3 //  4 - Dallas, etc.
           =3 //
           =3 // Take care with Dallas devices 
           =3 // - Timers default to *12* osc ticks unless CKCON is modified 
           =3 // - If using generic code on a Dallas device, use 12 here
           =3 #define OSC_PER_INST (6)
           =3 
           =3 //------------------------------------------------------------------
           =3 // SHOULD NOT NEED TO EDIT THE SECTIONS BELOW
           =3 //------------------------------------------------------------------
           =3 typedef unsigned char tByte;
           =3 typedef unsigned int  tWord;
           =3 typedef unsigned long tLong;
           =3 
           =3 // Misc #defines
           =3 #ifndef TRUE
           =3 #define FALSE 0
           =3 #define TRUE (!FALSE)
           =3 #endif
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 11  

           =3 
           =3 #define RETURN_NORMAL (bit) 0
           =3 #define RETURN_ERROR (bit) 1
           =3 
           =3 
           =3 //------------------------------------------------------------------
           =3 // Interrupts
           =3 // - see Chapter 13.  
           =3 //------------------------------------------------------------------
           =3 
           =3 // Generic 8051/52 timer interrupts (used in most schedulers)
           =3 #define INTERRUPT_Timer_0_Overflow 1
           =3 #define INTERRUPT_Timer_1_Overflow 3
           =3 #define INTERRUPT_Timer_2_Overflow 5
           =3 
           =3 // Additional interrupts (used in shared-clock schedulers)
           =3 #define INTERRUPT_EXTERNAL_0 0
           =3 #define INTERRUPT_EXTERNAL_1 2
           =3 #define INTERRUPT_UART_Rx_Tx 4
           =3 #define INTERRUPT_CAN_c515c 17
           =3 
           =3 //------------------------------------------------------------------
           =3 // Error codes 
           =3 // - see Chapter 14. 
           =3 //------------------------------------------------------------------
           =3 
           =3 #define ERROR_SCH_TOO_MANY_TASKS (1)
           =3 #define ERROR_SCH_CANNOT_DELETE_TASK (2)
           =3 
           =3 #define ERROR_SCH_WAITING_FOR_SLAVE_TO_ACK (3)
           =3 #define ERROR_SCH_WAITING_FOR_START_COMMAND_FROM_MASTER (3)
           =3 
           =3 #define ERROR_SCH_ONE_OR_MORE_SLAVES_DID_NOT_START (4)
           =3 #define ERROR_SCH_LOST_SLAVE (5)
           =3 
           =3 #define ERROR_SCH_CAN_BUS_ERROR (6)
           =3 
           =3 #define ERROR_I2C_WRITE_BYTE (10)
           =3 #define ERROR_I2C_READ_BYTE (11)
           =3 #define ERROR_I2C_WRITE_BYTE_AT24C64 (12)
           =3 #define ERROR_I2C_READ_BYTE_AT24C64 (13)
           =3 #define ERROR_I2C_DS1621 (14)
           =3 
           =3 #define ERROR_USART_TI (21)
           =3 #define ERROR_USART_WRITE_CHAR (22)
           =3 
           =3 #define ERROR_SPI_EXCHANGE_BYTES_TIMEOUT (31)
           =3 #define ERROR_SPI_X25_TIMEOUT (32)
           =3 #define ERROR_SPI_MAX1110_TIMEOUT (33)
           =3 
           =3 #define ERROR_ADC_MAX150_TIMEOUT (44)
           =3 
           =3 #endif
 115      =3  
 116      =3  /*------------------------------------------------------------------*-
 117      =3    ---- END OF FILE -------------------------------------------------
 118      =3  -*------------------------------------------------------------------*/
  28      =2  
  29      =2  // ------ Public data type declarations ----------------------------
  30      =2  
  31      =2  // Store in DATA area, if possible, for rapid access  
  32      =2  // Total memory per task is 7 bytes
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 12  

  33      =2  typedef data struct 
  34      =2     {
  35      =2     // Pointer to the task (must be a 'void (void)' function)
  36      =2     void (code * pTask)(void);  
  37      =2  
  38      =2     // Delay (ticks) until the function will (next) be run
  39      =2     // - see SCH_Add_Task() for further details
  40      =2     tWord Delay;       
  41      =2  
  42      =2     // Interval (ticks) between subsequent runs.
  43      =2     // - see SCH_Add_Task() for further details
  44      =2     tWord Period;       
  45      =2  
  46      =2     // Incremented (by scheduler) when task is due to execute
  47      =2     tByte RunMe;       
  48      =2     } sTask; 
  49      =2  
  50      =2  // ------ Public function prototypes -------------------------------
  51      =2  
  52      =2  // Core scheduler functions
  53      =2  void  SCH_Dispatch_Tasks(void);
  54      =2  tByte SCH_Add_Task(void (code*) (void), const tWord, const tWord);  
  55      =2  bit   SCH_Delete_Task(const tByte);
  56      =2  void  SCH_Report_Status(void);
  57      =2  
  58      =2  // ------ Public constants -----------------------------------------
  59      =2  
  60      =2  // The maximum number of tasks required at any one time
  61      =2  // during the execution of the program
  62      =2  //
  63      =2  // MUST BE ADJUSTED FOR EACH NEW PROJECT
  64      =2  #define SCH_MAX_TASKS   (2)   
  65      =2   
  66      =2  #endif
  67      =2                                
  68      =2  /*------------------------------------------------------------------*-
  69      =2    ---- END OF FILE -------------------------------------------------
  70      =2  -*------------------------------------------------------------------*/
  71      =2  
  26      =1  
  27      =1  // ------ Public function prototypes -------------------------------
  28      =1  
  29      =1  void SCC_A_MASTER_Init_T2_CAN(void);
  30      =1  void SCC_A_MASTER_Start(void);
  31      =1  
  32      =1  // ------ Public constants -----------------------------------------
  33      =1  
  34      =1  #define NUMBER_OF_SLAVES 1
  35      =1  
  36      =1  // CAN #defines &c - mainly from Infineon DaVE output 
  37      =1  
  38      =1  // Control Register
  39      =1  #define CAN_cr   (*((tByte volatile xdata *) 0xF700))
  40      =1  
  41      =1  // Status Register
  42      =1  #define CAN_sr   (*((tByte volatile xdata *) 0xF701))
  43      =1  
  44      =1  // Bit Timing Register
  45      =1  #define CAN_btr0 (*((tByte volatile xdata *) 0xF704))
  46      =1  #define CAN_btr1 (*((tByte volatile xdata *) 0xF705))
  47      =1  
  48      =1  // Global Mask Short
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 13  

  49      =1  #define CAN_gms0  (*((tByte volatile xdata *) 0xF706))
  50      =1  
  51      =1  // Global Mask Short
  52      =1  #define CAN_gms1  (*((tByte volatile xdata *) 0xF707))
  53      =1  
  54      =1  // Upper Global Mask Long
  55      =1  #define CAN_ugml0 (*((tByte volatile xdata *) 0xF708))
  56      =1  #define CAN_ugml1 (*((tByte volatile xdata *) 0xF709))
  57      =1  
  58      =1  // Lower Global Mask Long
  59      =1  #define CAN_lgml0 (*((tByte volatile xdata *) 0xF70A))
  60      =1  #define CAN_lgml1 (*((tByte volatile xdata *) 0xF70B))
  61      =1  
  62      =1  // ------ Private data type declarations ---------------------------
  63      =1  
  64      =1  // Data structure representing a single CAN message
  65      =1  struct sCAN_message 
  66      =1     {
  67      =1     tByte MCR0;       // Message Control Register 0
  68      =1     tByte MCR1;       // Message Control Register 1
  69      =1     tByte UAR0;       // Upper Arbit. Reg. 0
  70      =1     tByte UAR1;       // Upper Arbit. Reg. 1
  71      =1     tByte LAR0;       // Lower Arbit. Reg. 0
  72      =1     tByte LAR1;       // Lower Arbit. Reg. 1
  73      =1     tByte MCFG;       // Message Configuration Register
  74      =1     tByte Data[8];    // Message Data 0 .. 7
  75      =1     tByte Customer;   // Reserved for application specific data
  76      =1     };
  77      =1  
  78      =1  // ------ Private variables ----------------------------------------
  79      =1  
  80      =1  // A total of 15 CAN message structures exist 
  81      =1  // (starting at at address 0xF710)
  82      =1  #define CAN_messages ((struct sCAN_message volatile xdata *) 0xF710)
  83      =1  
  84      =1  /*------------------------------------------------------------------*-
  85      =1    ---- END OF FILE -------------------------------------------------
  86      =1  -*------------------------------------------------------------------*/
  87      =1  
  33          #include "TLight_B.h"
   1      =1  /*------------------------------------------------------------------*-
   2      =1  
   3      =1     TLight_B.H (v1.00)
   4      =1  
   5      =1    ------------------------------------------------------------------
   6      =1     
   7      =1     - See TLight_B.C for details.
   8      =1  
   9      =1  
  10      =1     COPYRIGHT
  11      =1     ---------
  12      =1  
  13      =1     This code is from the book:
  14      =1  
  15      =1     PATTERNS FOR TIME-TRIGGERED EMBEDDED SYSTEMS by Michael J. Pont 
  16      =1     [Pearson Education, 2001; ISBN: 0-201-33138-1].
  17      =1  
  18      =1     This code is copyright (c) 2001 by Michael J. Pont.
  19      =1   
  20      =1     See book for copyright details and other information.
  21      =1  
  22      =1  -*------------------------------------------------------------------*/
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 14  

  23      =1  
  24      =1  // ------ Public data type declarations ----------------------------
  25      =1  
  26      =1  // Possible system states
  27      =1  typedef 
  28      =1  enum {RED, RED_AMBER, GREEN, AMBER, BULB_BLOWN} eLight_State;
  29      =1  
  30      =1  
  31      =1  // ------ Public constants -----------------------------------------
  32      =1  
  33      =1  #define MASTER 1
  34      =1  #define SLAVE 0
  35      =1  
  36      =1  // ------ Public function prototypes -------------------------------
  37      =1  
  38      =1  void TRAFFIC_LIGHTS_Init(void);
  39      =1  void TRAFFIC_LIGHTS_Update(void);
  40      =1  
  41      =1  void TRAFFIC_LIGHTS_Display_Safe_Output(void);
  42      =1  
  43      =1  /*------------------------------------------------------------------*-
  44      =1    ---- END OF FILE -------------------------------------------------
  45      =1  -*------------------------------------------------------------------*/
  34          
  35          /* ............................................................... */
  36          /* ............................................................... */
  37          
  38          void main(void)
  39             {
  40   1         // Prepare for the traffic light task
  41   1         TRAFFIC_LIGHTS_Init();
  42   1      
  43   1         // Set up the scheduler 
  44   1         SCC_A_MASTER_Init_T2_CAN();
  45   1      
  46   1         // Set up the flash LED task
  47   1         LED_Flash_Init();
  48   1      
  49   1         // TIMING IS IN TICKS (6 ms tick interval)
  50   1         // Add a 'flash LED' task (on for 1002 ms, off for 1002 ms)
  51   1         SCH_Add_Task(LED_Flash_Update, 0, 167);
  52   1      
  53   1         // Add the traffic-light task
  54   1         SCH_Add_Task(TRAFFIC_LIGHTS_Update, 30, 167);
  55   1         
  56   1         // Start the scheduler
  57   1         SCC_A_MASTER_Start();
  58   1      
  59   1         while(1)
  60   1            {
  61   2            SCH_Dispatch_Tasks();
  62   2            }
  63   1         }
  64          
  65          /*------------------------------------------------------------------*-
  66            ---- END OF FILE -------------------------------------------------
  67          -*------------------------------------------------------------------*/
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 15  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 41
0000 120000      E     LCALL   TRAFFIC_LIGHTS_Init
                                           ; SOURCE LINE # 44
0003 120000      E     LCALL   SCC_A_MASTER_Init_T2_CAN
                                           ; SOURCE LINE # 47
0006 120000      E     LCALL   LED_Flash_Init
                                           ; SOURCE LINE # 51
0009 7E00        E     MOV     R6,#HIGH LED_Flash_Update
000B 7F00        E     MOV     R7,#LOW LED_Flash_Update
000D 7BA7              MOV     R3,#0A7H
000F 7A00              MOV     R2,#00H
0011 E4                CLR     A
0012 FD                MOV     R5,A
0013 FC                MOV     R4,A
0014 120000      E     LCALL   _SCH_Add_Task
                                           ; SOURCE LINE # 54
0017 7E00        E     MOV     R6,#HIGH TRAFFIC_LIGHTS_Update
0019 7F00        E     MOV     R7,#LOW TRAFFIC_LIGHTS_Update
001B 7BA7              MOV     R3,#0A7H
001D 7A00              MOV     R2,#00H
001F 7D1E              MOV     R5,#01EH
0021 7C00              MOV     R4,#00H
0023 120000      E     LCALL   _SCH_Add_Task
                                           ; SOURCE LINE # 57
0026 120000      E     LCALL   SCC_A_MASTER_Start
0029         ?C0001:
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
0029 120000      E     LCALL   SCH_Dispatch_Tasks
                                           ; SOURCE LINE # 62
002C 80FB              SJMP    ?C0001
002E 22                RET     
             ; FUNCTION main (END)

C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 16  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


T2I0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
T2I1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
P4 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
BD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DFH  1
tLong. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
sTask. . . . . . . . . . . . . . . . .  TYPEDEF  DATA   STRUCT   -----  7
  pTask. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  2
  Delay. . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0002H  2
  Period . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0004H  2
  RunMe. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
T2R0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
T2R1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
BULB_BLOWN . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
tByte. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
IEN0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
EADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
IEN1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
sCAN_message . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  16
  MCR0 . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  MCR1 . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  UAR0 . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  UAR1 . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  LAR0 . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  LAR1 . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  MCFG . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  Data . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0007H  8
  Customer . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
IADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C0H  1
tWord. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
I2FR . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
I3FR . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C7H  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
T2CM . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
ADCON0 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IEX2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C1H  1
IEX3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C2H  1
IEX4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C3H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
SCC_A_MASTER_Start . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
IEX5 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C4H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
IEX6 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C5H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
LED_Flash_Init . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
INT2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
_SCH_Add_Task. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
INT3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 17  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


INT4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
INT5 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
INT6 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
ADEX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DDH  1
INT8 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
RED_AMBER. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TRAFFIC_LIGHTS_Init. . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
T2PS . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
ADST . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
SCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
RXDC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EFH  1
TXDC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EEH  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
SCC_A_MASTER_Init_T2_CAN . . . . . . .  EXTERN   CODE   PROC     -----  -----
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
SWDT . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BEH  1
eLight_State . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C6H  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
EX2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
EX3. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
EX4. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
ADM. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DBH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
EX5. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
EAL. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
EX6. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
CLKOUT . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
MX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D8H  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
MX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D9H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
MX2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DAH  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
CLK. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DEH  1
RED. . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SCH_Dispatch_Tasks . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
C51 COMPILER V6.10  MAIN                                                                   04/19/2001 14:10:27 PAGE 18  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BFH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
AMBER. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LED_Flash_Update . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
SRI. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
BSY. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DCH  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
WDT. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
GREEN. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SLS. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ECH  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
STO. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
F1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
TRAFFIC_LIGHTS_Update. . . . . . . . .  EXTERN   CODE   PROC     -----  -----
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
IRCON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     47    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
